configurations.all { config ->
    exclude group: "com.google.code.findbugs", module: "jsr305"

    resolutionStrategy {
        force "com.google.auto.value:auto-value-annotations:1.6.6"
        eachDependency { details ->
            if (details.requested.group == "com.google.auto.value" && details.requested.name == "auto-value") {
                details.useTarget "com.google.auto.value:auto-value-annotations:1.6.6"
            }
        }
    }
}

plugins.whenPluginAdded { plugin ->
    if (plugin.class.name in ["com.android.build.gradle.AppPlugin",
                              "com.android.build.gradle.LibraryPlugin",
                              "com.android.build.gradle.DynamicFeaturePlugin"]) {
        android {
            compileSdkVersion buildConfig.compileSdk

            defaultConfig {
                minSdkVersion buildConfig.minSdk
                targetSdkVersion buildConfig.targetSdk

                vectorDrawables.useSupportLibrary = true

                javaCompileOptions {
                    annotationProcessorOptions {
                        includeCompileClasspath = false
                    }
                }
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }

            lintOptions {
                warningsAsErrors true
                textReport true
                textOutput "stdout"
                explainIssues false

                disable "AnnotationProcessorOnCompilePath", "GradleDependency", "ObsoleteLintCustomCheck"
                informational "ContentDescription"
            }

            sourceSets {
                main.java.srcDirs += "src/main/kotlin"
                debug.java.srcDirs += "src/debug/kotlin"
                release.java.srcDirs += "src/release/kotlin"
                test.java.srcDirs += "src/test/kotlin"
                androidTest.java.srcDirs += "src/androidTest/kotlin"
            }
        }
    }
}

plugins.withId("com.android.library") {
    android.libraryVariants.all {
        it.generateBuildConfigProvider.configure { enabled = false }
    }
}

plugins.withId("org.jetbrains.kotlin.android.extensions") {
    androidExtensions {
        experimental = true
        features = ["parcelize"]
        defaultCacheImplementation = "NONE"
    }
}

plugins.withId("org.jetbrains.kotlin.kapt") {
    kapt {
        correctErrorTypes = true

        if (plugins.hasPlugin("org.jetbrains.kotlin.android") && JavaVersion.current() >= JavaVersion.VERSION_1_9) {
            javacOptions {
                option("-source", "8")
            }
        }
    }
}
