pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        maven {
            url "https://maven.fabric.io/public"
        }
    }

    resolutionStrategy.eachPlugin {
        if (requested.version == null) {
            return
        }
        switch (requested.id.id) {
            case "com.android.application":
            case "com.android.library":
                useModule "com.android.tools.build:gradle:$requested.version"
                break
            case "com.google.gms.google-services":
                useModule "com.google.gms:google-services:$requested.version"
                break
            case "io.fabric":
                useModule "io.fabric.tools:gradle:$requested.version"
                break
        }
    }
}

include ":core"
include ":core-ui"
include ":api"
include ":app"

include ":features:auth"
include ":features:collections"
include ":features:comments"
include ":features:deviations"
include ":features:feed"
include ":features:gallery"
include ":features:main"
include ":features:notifications"
include ":features:profile"
include ":features:settings"
include ":features:statuses"
include ":features:users"
include ":features:watch"
